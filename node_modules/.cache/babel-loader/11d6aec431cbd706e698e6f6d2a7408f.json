{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akhil\\\\Downloads\\\\Compressed\\\\Haptik-Assessment-main\\\\src\\\\components\\\\friendlist\\\\Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { getFromLocalStorage } from '../../storage/index';\nimport { Provider, FriendsListReducer } from '../../context/FriendListContext';\nimport { ADD_DATA } from '../../constants/ActionTypes';\nimport Items from './Items';\nimport Popup from './Popup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  const [friendName, setFriendName] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n  const [children, setChildren] = useState('');\n  const [friendListData, friendListDispatch] = useReducer(FriendsListReducer, getFromLocalStorage() || []);\n\n  const toggleModal = component => {\n    if (component) {\n      setChildren(component);\n    }\n\n    setIsOpen(prev => !prev);\n  };\n\n  const handleInput = () => {\n    const value = friendName;\n    setFriendName('');\n    if (!value) return;\n    const friendData = {\n      id: uuidv4(),\n      name: value,\n      isFav: false\n    };\n    friendListDispatch({\n      type: ADD_DATA,\n      payload: friendData\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"heading\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"head\",\n        children: \"Friends List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchButton\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input1\",\n        type: \"text\",\n        value: friendName,\n        placeholder: \"Enter your friend's name...\",\n        onChange: e => setFriendName(e.target.value),\n        onKeyUp: e => e.key === 'Enter' ? handleInput() : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Materials\",\n      children: /*#__PURE__*/_jsxDEV(Provider, {\n        value: {\n          friendListData,\n          friendListDispatch,\n          toggleModal\n        },\n        children: /*#__PURE__*/_jsxDEV(Items, {\n          name: friendName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      open: isOpen,\n      onClose: toggleModal,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Main, \"DnXv6IUkBFQmPbhaBmDuQIEXBvk=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Users/akhil/Downloads/Compressed/Haptik-Assessment-main/src/components/friendlist/Main.js"],"names":["React","useReducer","useState","v4","uuidv4","getFromLocalStorage","Provider","FriendsListReducer","ADD_DATA","Items","Popup","Main","friendName","setFriendName","isOpen","setIsOpen","children","setChildren","friendListData","friendListDispatch","toggleModal","component","prev","handleInput","value","friendData","id","name","isFav","type","payload","e","target","key"],"mappings":"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","sourcesContent":["import React, { useReducer, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { getFromLocalStorage } from '../../storage/index';\nimport { Provider, FriendsListReducer } from '../../context/FriendListContext';\nimport { ADD_DATA } from '../../constants/ActionTypes';\nimport Items from './Items';\nimport Popup from './Popup';\n\n\nconst Main = () => {\n   const [friendName, setFriendName] = useState('');\n   const [isOpen, setIsOpen] = useState(false);\n   const [children, setChildren] = useState('');\n\n   const [friendListData, friendListDispatch] = useReducer(\n      FriendsListReducer,\n      getFromLocalStorage() || []\n   );\n\n   const toggleModal = (component) => {\n      if (component) {\n         setChildren(component);\n      }\n      setIsOpen((prev) => !prev);\n   };\n\n   const handleInput = () => {\n      const value = friendName;\n      setFriendName('');\n\n      if (!value) return;\n      const friendData = {\n         id: uuidv4(),\n         name: value,\n         isFav: false,\n      };\n\n      friendListDispatch({ type: ADD_DATA, payload: friendData });\n   };\n\n   return (\n      <div className=\"Main\">\n         <div className=\"heading\">\n            <h1 className=\"head\">Friends List</h1>\n         </div>\n         <div className=\"searchButton\">\n            <input\n               className=\"input1\"\n               type=\"text\"\n               value={friendName}\n               placeholder=\"Enter your friend's name...\"\n               onChange={(e) => setFriendName(e.target.value)}\n               onKeyUp={(e) => (e.key === 'Enter' ? handleInput() : null)}\n            />\n         </div>\n         <div className=\"Materials\">\n            <Provider value={{ friendListData, friendListDispatch, toggleModal }}>\n               <Items name={friendName} />\n            </Provider>\n         </div>\n         <Popup open={isOpen} onClose={toggleModal} children={children} />\n      </div>\n   );\n};\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}