{"ast":null,"code":"import { createContext } from 'react';\nimport { ADD_DATA, FETCH_DATA, UPDATE_FAV, UPDATE_NAME, DELETE_DATA } from '../constants/ActionTypes';\nimport { addToLocalStorage, getFromLocalStorage } from '../storage/index';\nexport const FriendContext = /*#__PURE__*/createContext();\nexport const Provider = FriendContext.Provider;\nexport function FriendsListReducer(state, action) {\n  let result = state;\n\n  switch (action.type) {\n    case ADD_DATA:\n      result = [action.payload, ...state];\n      break;\n\n    case FETCH_DATA:\n      return getFromLocalStorage();\n\n    case UPDATE_FAV:\n      {\n        const index = state.findIndex(ele => ele.id === action.id);\n        state[index].isFav = !state[index].isFav;\n        result = [...state.sort((a, b) => b.isFav - a.isFav)];\n        break;\n      }\n\n    case UPDATE_NAME:\n      {\n        const index = state.findIndex(ele => ele.id === action.id);\n        state[index].name = action.editedName;\n        result = [...state];\n        break;\n      }\n\n    case DELETE_DATA:\n      {\n        result = state.filter(ele => ele.id !== action.id);\n        break;\n      }\n\n    default:\n      result = state;\n  }\n\n  addToLocalStorage(result);\n  return result;\n}\n_c = FriendsListReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"FriendsListReducer\");","map":{"version":3,"sources":["C:/Users/akhil/Downloads/Compressed/Haptik-Assessment-main/src/context/FriendListContext.js"],"names":["createContext","ADD_DATA","FETCH_DATA","UPDATE_FAV","UPDATE_NAME","DELETE_DATA","addToLocalStorage","getFromLocalStorage","FriendContext","Provider","FriendsListReducer","state","action","result","type","payload","index","findIndex","ele","id","isFav","sort","a","b","name","editedName","filter"],"mappings":"AAAA,SAASA,aAAT,QAA8B,OAA9B;AAEA,SACGC,QADH,EAEGC,UAFH,EAGGC,UAHH,EAIGC,WAJH,EAKGC,WALH,QAMO,0BANP;AAOA,SAASC,iBAAT,EAA4BC,mBAA5B,QAAuD,kBAAvD;AAEA,OAAO,MAAMC,aAAa,gBAAGR,aAAa,EAAnC;AACP,OAAO,MAAMS,QAAQ,GAAGD,aAAa,CAACC,QAA/B;AAEP,OAAO,SAASC,kBAAT,CAA4BC,KAA5B,EAAmCC,MAAnC,EAA2C;AAC/C,MAAIC,MAAM,GAAGF,KAAb;;AACA,UAAQC,MAAM,CAACE,IAAf;AACG,SAAKb,QAAL;AACGY,MAAAA,MAAM,GAAG,CAACD,MAAM,CAACG,OAAR,EAAiB,GAAGJ,KAApB,CAAT;AACA;;AAEH,SAAKT,UAAL;AACG,aAAOK,mBAAmB,EAA1B;;AAEH,SAAKJ,UAAL;AAAiB;AACd,cAAMa,KAAK,GAAGL,KAAK,CAACM,SAAN,CAAiBC,GAAD,IAASA,GAAG,CAACC,EAAJ,KAAWP,MAAM,CAACO,EAA3C,CAAd;AACAR,QAAAA,KAAK,CAACK,KAAD,CAAL,CAAaI,KAAb,GAAqB,CAACT,KAAK,CAACK,KAAD,CAAL,CAAaI,KAAnC;AACAP,QAAAA,MAAM,GAAG,CAAC,GAAGF,KAAK,CAACU,IAAN,CAAW,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACH,KAAF,GAAUE,CAAC,CAACF,KAAjC,CAAJ,CAAT;AACA;AACF;;AAED,SAAKhB,WAAL;AAAkB;AACf,cAAMY,KAAK,GAAGL,KAAK,CAACM,SAAN,CAAiBC,GAAD,IAASA,GAAG,CAACC,EAAJ,KAAWP,MAAM,CAACO,EAA3C,CAAd;AACAR,QAAAA,KAAK,CAACK,KAAD,CAAL,CAAaQ,IAAb,GAAoBZ,MAAM,CAACa,UAA3B;AACAZ,QAAAA,MAAM,GAAG,CAAC,GAAGF,KAAJ,CAAT;AACA;AACF;;AAED,SAAKN,WAAL;AAAkB;AACfQ,QAAAA,MAAM,GAAGF,KAAK,CAACe,MAAN,CAAcR,GAAD,IAASA,GAAG,CAACC,EAAJ,KAAWP,MAAM,CAACO,EAAxC,CAAT;AACA;AACF;;AAED;AACGN,MAAAA,MAAM,GAAGF,KAAT;AA5BN;;AA+BAL,EAAAA,iBAAiB,CAACO,MAAD,CAAjB;AACA,SAAOA,MAAP;AACF;KAnCeH,kB","sourcesContent":["import { createContext } from 'react';\n\nimport {\n   ADD_DATA,\n   FETCH_DATA,\n   UPDATE_FAV,\n   UPDATE_NAME,\n   DELETE_DATA,\n} from '../constants/ActionTypes';\nimport { addToLocalStorage, getFromLocalStorage } from '../storage/index';\n\nexport const FriendContext = createContext();\nexport const Provider = FriendContext.Provider;\n\nexport function FriendsListReducer(state, action) {\n   let result = state;\n   switch (action.type) {\n      case ADD_DATA:\n         result = [action.payload, ...state];\n         break;\n\n      case FETCH_DATA:\n         return getFromLocalStorage();\n\n      case UPDATE_FAV: {\n         const index = state.findIndex((ele) => ele.id === action.id);\n         state[index].isFav = !state[index].isFav;\n         result = [...state.sort((a, b) => b.isFav - a.isFav)];\n         break;\n      }\n\n      case UPDATE_NAME: {\n         const index = state.findIndex((ele) => ele.id === action.id);\n         state[index].name = action.editedName;\n         result = [...state];\n         break;\n      }\n\n      case DELETE_DATA: {\n         result = state.filter((ele) => ele.id !== action.id);\n         break;\n      }\n\n      default:\n         result = state;\n   }\n\n   addToLocalStorage(result);\n   return result;\n}\n"]},"metadata":{},"sourceType":"module"}